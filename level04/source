int main() {
	pid_t process_id = fork();
	char buffer[128] = {0};
	int status_location;

	if (process_id == 0) {
    // happens in the "child" process
		prctl(1, 1);
		ptrace(0, 0, NULL, NULL);
		puts("Give me some shellcode, k");
		gets(buffer);
	} else {
    // happens in the "parent" process
    // Here, process_id points to the process ID of the "child" process
		while (1) {
      // waits until there's new information about the child process
			wait(&status_location);
			if (status_location & 0x7f aka 127 == 0 || something I don't understand but doesn't seem important) {
				puts("child is exiting...");
				break;
			}
      // checks whether any system calls are happening in the child process
      // that are exec (11)
			if (ptrace(PTRACE_PEEKUSER, process_id, 0x2c, 0) == 11) {
				puts("no exec() for you");
				kill(process_id, 0x9 aka SIGKILL);
				break;
			}
		}
	}

	return 0;
}
